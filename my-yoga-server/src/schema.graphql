# import Pet from './generated/prisma.graphql'
# import User from './generated/prisma.graphql'

type Query {
  pets: Pet
  pet($id: ID!): Pet

}


type Mutation {
  createPet(data: PetCreateInput!): Pet
  # createUser(data: UserCreateInput!): User!
  updatePet(data: PetUpdateInput!, where: PetWhereUniqueInput!): Pet
  # updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  # deletePet(where: PetWhereUniqueInput!): Pet
  # deleteUser(where: UserWhereUniqueInput!): User
  # upsertPet(where: PetWhereUniqueInput!, create: PetCreateInput!, update: PetUpdateInput!): Pet!
  # upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  # updateManyPets(data: PetUpdateInput!, where: PetWhereInput): BatchPayload!
  # updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  # deleteManyPets(where: PetWhereInput): BatchPayload!
  # deleteManyUsers(where: UserWhereInput): BatchPayload!
}


# Input type for a new Pet
type PetCreateInput {
  # id: ID!
  name: String
  species: String
  age: Int
  imageUrl: String
  description: String
  adoptionFee: Int
}

input PetWhereUniqueInput {
  id: String
}

type PetUpdateInput {
  name: String
  species: String
  age: Int
  imageUrl: String
  description: String
  adoptionFee: Int
}